{"version":3,"file":"static/js/198.3c0a5385.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","redux/contacts/selectors.js","components/contactList/ContactList.jsx","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","pages/Contacts.jsx","webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__+SpO1\",\"contactItem\":\"ContactList_contactItem__1JJfT\",\"buttonDelete\":\"ContactList_buttonDelete__yxrLW\"};","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filters) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filters.toLowerCase())\n    );\n  }\n);\n","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  // const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // const handleDelete = e => {\n  //   dispatch(deleteContact(e.currentTarget.id));\n  // };\n\n  // const getVisibilityContacts = () => {\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filterValue)\n  //   );\n  // };\n\n  // const visibilityContacts = getVisibilityContacts();\n  // console.log(visibilityContacts);\n  // console.log(contacts);\n  // console.log(filterValue);\n  return contacts.length > 0 ? (\n    <ul className={css.contactList}>\n      {contacts.map(contact => (\n        <li className={css.contactItem} key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            id={contact.id}\n            className={css.buttonDelete}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <form>\n      <p>\n        There are no contacts in your phonebook. Please add your first contact!\n      </p>\n    </form>\n  );\n};\nexport default ContactList;\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name: evt.target.elements.name.value,\n      number: evt.target.elements.number.value,\n    };\n    const isNameExist = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isNameExist) {\n      alert(`${newContact.name} is already in contacts!`);\n    } else {\n      dispatch(addContact(newContact));\n\n      evt.target.reset();\n    }\n  }\n\n  return (\n    <form className={css.form} onSubmit={handlerSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input className={css.formInput} type=\"text\" name=\"name\" required />\n      </label>\n\n      <label className={css.formLabel}>\n        Number\n        <input className={css.formInput} type=\"tel\" name=\"number\" required />\n      </label>\n\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleFilter\":\"Filter_titleFilter__1lF8u\",\"inputFilter\":\"Filter_inputFilter__bTq6I\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilterContacts } from '../../redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { selectContactsFilter } from '../../redux/contacts/selectors';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const changeFilter = e => {\n    dispatch(setFilterContacts(e.target.value));\n  };\n\n  return (\n    <label className={css.titleFilter}>\n      Find contacts by name\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={changeFilter}\n        filter={filter}\n        value={filter}\n      />\n    </label>\n  );\n};\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport ContactList from 'components/contactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\n// import { selectLoading } from 'redux/tasks/selectors';\nimport ContactForm from 'components/contactForm/ContactForm';\nimport Filter from 'components/filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  //  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Your contacts</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && 'Request in progress...'}\n\n      <ContactList />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"formLabel\":\"ContactForm_formLabel__ZcPlW\",\"formButton\":\"ContactForm_formButton__W7F-0\",\"formInput\":\"ContactForm_formInput__WxPOM\"};"],"names":["selectContactsFilter","state","filters","filter","selectVisibleContacts","createSelector","contacts","contact","name","toLowerCase","includes","useSelector","dispatch","useDispatch","useEffect","fetchContacts","length","_jsx","className","css","children","map","_jsxs","number","id","type","onClick","deleteContact","onSubmit","evt","preventDefault","newContact","nanoid","target","elements","value","some","alert","concat","addContact","reset","required","onChange","e","setFilterContacts","Contacts","isLoading","ContactForm","Filter","ContactList"],"sourceRoot":""}