{"version":3,"file":"static/js/198.fe3a80e9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","redux/contacts/selectors.js","components/contactList/ContactList.jsx","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","pages/Contacts.jsx","webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__+SpO1\",\"contactItem\":\"ContactList_contactItem__1JJfT\",\"buttonDelete\":\"ContactList_buttonDelete__yxrLW\"};","// import { createSelector } from '@reduxjs/toolkit/dist';\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n// export const selectVisibleContacts = createSelector(\n//   [selectContacts, selectContactsFilter],\n//   (contacts, filters) => {\n//     const filterLowCase = filters.toLowerCase().trim();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filterLowCase)\n//     );\n//   }\n// );\n","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectContactsFilter,\n} from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  // const handleDelete = e => {\n  //   dispatch(deleteContact(e.currentTarget.id));\n  // };\n\n  const getVisibilityContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n  // console.log(visibilityContacts);\n  // console.log(contacts);\n  // console.log(filterValue);\n  return (\n    <div className={css.containerList}>\n      {!visibilityContacts?.length && (\n        <p>\n          There are no contacts in your phonebook. Please add your first\n          contact!\n        </p>\n      )}\n      {/* {isLoading && !error && <b>Request in progress...</b>} */}\n      <ul className={css.contactList}>\n        {visibilityContacts.map(contact => (\n          <li className={css.contactItem} key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              id={contact.id}\n              className={css.buttonDelete}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default ContactList;\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useState } from 'react';\n// import { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is alredy in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  }\n\n  return (\n    <form className={css.form} onSubmit={handlerSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          // value={name}\n          // onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          // value={number}\n          // onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleFilter\":\"Filter_titleFilter__1lF8u\",\"inputFilter\":\"Filter_inputFilter__bTq6I\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilterContacts } from '../../redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilterContacts(e.target.value));\n  };\n\n  return (\n    <label className={css.titleFilter}>\n      Find contacts by name\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport ContactList from 'components/contactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\n// import { selectLoading } from 'redux/tasks/selectors';\nimport ContactForm from 'components/contactForm/ContactForm';\nimport Filter from 'components/filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  //  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Your contacts</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && 'Request in progress...'}\n\n      <ContactList />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"formLabel\":\"ContactForm_formLabel__ZcPlW\",\"formButton\":\"ContactForm_formButton__W7F-0\",\"formInput\":\"ContactForm_formInput__WxPOM\",\"containerForm\":\"ContactForm_containerForm__Rz99O\"};"],"names":["selectContacts","state","contacts","selectContactsFilter","filters","filter","useSelector","filterValue","toLowerCase","dispatch","useDispatch","visibilityContacts","contact","name","includes","_jsxs","className","css","children","length","_jsx","map","number","id","type","onClick","deleteContact","onSubmit","evt","preventDefault","form","target","value","find","alert","concat","addContact","reset","required","onChange","e","setFilterContacts","Contacts","isLoading","useEffect","fetchContacts","ContactForm","Filter","ContactList"],"sourceRoot":""}