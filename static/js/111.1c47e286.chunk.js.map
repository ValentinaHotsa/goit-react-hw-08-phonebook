{"version":3,"file":"static/js/111.1c47e286.chunk.js","mappings":"yOAIaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAK,IAanD,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAAA,cAAkBC,SAAA,CAC/BP,IAAcQ,EAAAA,EAAAA,KAAA,OAAAD,SAAK,iBACpBH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,EAAAA,KAAUG,SAfV,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACff,GACEgB,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,QAIvC,EAKuDE,aAAa,MAAKZ,SAAA,EACnEH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,EAAAA,UAAcC,SAAA,CAAC,SAE/BC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EAAAA,EAAAA,UACXc,KAAK,QACLC,GAAG,aACHC,KAAK,cAGTlB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,EAAAA,UAAcC,SAAA,CAAC,YAE/BC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EAAAA,EAAAA,UACXe,GAAG,gBACHD,KAAK,WACLE,KAAK,iBAGTd,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAAA,EAAAA,WAAgBc,KAAK,SAAQb,SAAC,YAIjDC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,YAAWjB,SAAC,sBAI7B,E,8BC3Ce,SAASkB,IACtB,IAAMC,GAAazB,EAAAA,EAAAA,IAAY0B,EAAAA,IAEzBC,GAAWC,EAAAA,EAAAA,MAOjB,OANAC,EAAAA,EAAAA,YAAU,WACRJ,GAAcE,EAAS,YACzB,GAAG,CAACF,EAAYE,KAKdxB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACX,EAAS,MAGhB,C,qBCrBA,KAAgB,KAAO,0BAA0B,UAAY,+BAA+B,WAAa,gCAAgC,UAAY,+B","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\nimport css from '../contactForm/ContactForm.module.css';\nimport { Link } from 'react-router-dom';\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const errorLogin = useSelector(state => state.error);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    // form.reset();\n  };\n\n  return (\n    <div className={css.containerForm}>\n      {errorLogin && <div>Error login</div>}\n      <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className={css.formLabel}>\n          Email\n          <input\n            className={css.formInput}\n            type=\"email\"\n            id=\"inputEmail\"\n            name=\"email\"\n          />\n        </label>\n        <label className={css.formLabel}>\n          Password\n          <input\n            className={css.formInput}\n            id=\"inputPassword\"\n            type=\"password\"\n            name=\"password\"\n          />\n        </label>\n        <button className={css.formButton} type=\"submit\">\n          Log In\n        </button>\n\n        <Link to=\"/register\">Registration</Link>\n      </form>\n    </div>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\n// import { NavLink } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../redux/auth/selectors';\nexport default function Login() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    isLoggedIn && navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n  // const login = body => {\n  //   dispatch(logInThunk(body));\n  // };\n  return (\n    <div>\n      <h2>Login</h2>\n      <LoginForm />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"formLabel\":\"ContactForm_formLabel__ZcPlW\",\"formButton\":\"ContactForm_formButton__W7F-0\",\"formInput\":\"ContactForm_formInput__WxPOM\"};"],"names":["LoginForm","dispatch","useDispatch","errorLogin","useSelector","state","error","_jsxs","className","css","children","_jsx","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","autoComplete","type","id","name","Link","to","Login","isLoggedIn","selectIsLoggedIn","navigate","useNavigate","useEffect"],"sourceRoot":""}